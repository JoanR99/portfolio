import type { NextPage } from 'next';
import Head from 'next/head';
import { BsGithub } from 'react-icons/bs';
import { IoOpen } from 'react-icons/io5';
import { motion } from 'framer-motion';
import Image from 'next/image';
import {
	SiJavascript,
	SiTypescript,
	SiSass,
	SiReact,
	SiNodedotjs,
	SiExpress,
	SiNestjs,
	SiGraphql,
	SiPostgresql,
	SiMongodb,
	SiMaterialui,
	SiStyledcomponents,
	SiRedux,
	SiJest,
	SiPrisma,
} from 'react-icons/si';
import BlurImage from '../../components/BlurImage';
import Link from 'next/link';

const Home: NextPage = () => {
	return (
		<div className="mb-8">
			<Head>
				<title>Joan Romero - Coroshop</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className="mx-auto max-w-sm  px-4 sm:max-w-xl md:max-w-2xl lg:max-w-4xl xl:max-w-6xl">
				<div className="min-h-screen pt-24">
					<h3 className="text-xl font-bold text-teal-600 sm:text-2xl md:text-3xl lg:text-4xl">
						Coroshop
					</h3>

					<p className="text-md mt-4">
						Coroshop es un e-commerce de dispositivos electrónicos que cuenta
						con opciones de administrador para agregar, editar o eliminar
						productos, ademas de permitir a usuarios realizar reseñas y pagar a
						traves de PayPal o Stripe.
					</p>

					<div className="mt-6 flex w-full justify-center">
						<motion.a
							initial={{
								x: 200,
								opacity: 0,
								scale: 0.5,
							}}
							animate={{
								x: 0,
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							href="https://github.com/JoanR99/coroshop-server"
							target="_blank"
							rel="noopener noreferrer"
							className="mr-4 flex flex-col items-center justify-center"
						>
							<BsGithub className="h-6 w-6 text-pink-700 hover:scale-105 hover:opacity-90 sm:h-7 sm:w-7" />
							Backend
						</motion.a>
						<motion.a
							initial={{
								x: 200,
								opacity: 0,
								scale: 0.5,
							}}
							animate={{
								x: 0,
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							href="https://github.com/JoanR99/coroshop-client"
							target="_blank"
							rel="noopener noreferrer"
							className="mr-4 flex flex-col items-center justify-center"
						>
							<BsGithub className="h-6 w-6 text-pink-700  hover:scale-105 hover:opacity-90 sm:h-7 sm:w-7" />
							Frontend
						</motion.a>
						<motion.a
							initial={{
								x: 200,
								opacity: 0,
								scale: 0.5,
							}}
							animate={{
								x: 0,
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							href="https://coroshop-client.vercel.app/"
							target="_blank"
							rel="noopener noreferrer"
							className="mr-4 flex flex-col items-center justify-center"
						>
							<IoOpen className="h-6 w-6 text-pink-700  hover:scale-105 hover:opacity-90 sm:h-7 sm:w-7" />
							Visitar
						</motion.a>
					</div>

					<div className="mt-8 grid w-full grid-cols-1 lg:mt-10 lg:grid-cols-2 lg:items-center lg:gap-x-10">
						<motion.div
							initial={{
								opacity: 0,
								scale: 0.5,
							}}
							whileInView={{
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							className="m-2 h-fit w-full rounded-xl shadow-lg shadow-gray-400 lg:order-2"
						>
							<Image
								src="/images/coroshop-frame.png"
								alt="Coroshop"
								width={2000}
								height={1400}
								className="rounded-xl"
							/>
						</motion.div>

						<div className="mt-8 flex h-fit flex-col lg:mt-0">
							<div>
								<h4 className="text-xl font-bold text-teal-700">Stack</h4>
								<div className="mt-4 flex w-fit">
									<SiTypescript className='sm:w-8" mr-4 h-6 w-6 text-sky-600 sm:h-8' />
									<SiReact className='sm:w-8" mr-4 h-6 w-6 text-sky-600 sm:h-8' />
									<SiRedux className='sm:w-8" mr-4 h-6 w-6 text-purple-700 sm:h-8' />
									<SiStyledcomponents className='sm:w-8" mr-4 h-12 w-12 text-pink-700 sm:h-8' />
									<SiNodedotjs className='sm:w-8" mr-4 h-6 w-6 text-lime-700 sm:h-8' />
									<SiNestjs className='sm:w-8" mr-4 h-6 w-6 text-red-700 sm:h-8' />
									<SiGraphql className='sm:w-8" mr-4 h-6 w-6 text-pink-700 sm:h-8' />
									<SiMongodb className='sm:w-8" mr-4 h-6 w-6 text-green-700 sm:h-8' />
									<SiJest className='sm:w-8" mr-4 h-6 w-6 text-red-800 sm:h-8' />
								</div>
								<p className="text-md mt-4">
									La aplicación fue desarrollada en su totalidad con TypeScript,
									lo que permitió evitar errores en runtime, utilizando React
									como framework base para el frontend y manejando el estado con
									Redux Toolkit, siendo esta una librería perfecta para el caso
									de uso debido a que facilita manejar el estado del cliente
									conformado principalmente por el carrito de compra y la sesión
									de usuario, ademas de manejar el estado o el cache del
									servidor con su complemento opcional RTK Query. Por su parte,
									para los estilos utilice Styled Components, debido que
									facilita la creación de componentes de ui y porque no requiere
									de ningún tipo de configuración especial.
								</p>
								<p className="text-md mt-2">
									Por otro lado, el backend esta conformado por un servidor en
									Nest, debido a que trabaja de forma predeterminada con
									TypeScript, permite crear apis mas escalables, testeables y
									mantenibles debido a que es un framework dogmático que
									promueve una estructura con una buena separación de
									responsabilidades y porque facilita la creación de apis en
									GraphQL, el cual fue el tipo de api utilizada en este proyecto
									debido a que las peticiones se gestionan en un solo recorrido
									y por estar compuesto por un lenguaje de consulta tipado que
									se complementa muy bien con TypeScript y genera la
									documentación de la api de forma automática. Finalmente,
									utilice MongoDB como base de datos debido a su flexibilidad
									para definir los modelos y porque es perfecto para manejar
									grandes cantidades de información al escalar de forma mas
									economica que una base de datos relacional.
								</p>
							</div>
						</div>
					</div>

					<div className="my-8 grid w-full grid-cols-1 lg:mt-10 lg:grid-cols-2 lg:items-center lg:gap-x-10">
						<motion.div
							initial={{
								opacity: 0,
								scale: 0.5,
							}}
							whileInView={{
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							className="m-2 h-fit w-full rounded-xl shadow-lg shadow-gray-400"
						>
							<Image
								src="/images/cs-2.png"
								alt="Coroshop - Login"
								width={2000}
								height={1400}
								className="rounded-xl"
							/>
						</motion.div>

						<div className="mt-8 h-fit">
							<h4 className="text-xl font-bold text-teal-700">
								Origen de la Idea
							</h4>
							<p className="text-md mt-4">
								Coroshop surge con la finalidad de desarrollar una aplicación
								mas compleja tanto en el backend como en el frontend, la cual me
								permitiera practicar y asentar conocimientos en las ultimas
								librerías o tecnologías que estaba aprendiendo, como es el caso
								de Nest, GraphQL o Redux Toolkit con RTK Query. Ademas, también
								quería desarrollar una aplicación en la cual aplicar un sistema
								de autorización basado en roles, en este caso el rol de
								administrador.
							</p>
						</div>
					</div>

					<div className="my-8 grid w-full grid-cols-1 lg:mt-10 lg:grid-cols-2 lg:items-center lg:gap-x-10">
						<motion.div
							initial={{
								opacity: 0,
								scale: 0.5,
							}}
							whileInView={{
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							className="m-2 h-fit w-full rounded-xl shadow-lg shadow-gray-400 lg:order-2 lg:mt-6"
						>
							<Image
								src="/images/cs-3.png"
								alt="Coroshop - All Products"
								width={2000}
								height={1400}
								className="rounded-xl"
							/>
						</motion.div>

						<div className="my-8 h-fit lg:col-span-2 lg:mb-4">
							<h4 className="text-xl font-bold text-teal-700">
								Proceso de Desarrollo
							</h4>
							<p className="text-md mt-4">
								La primera version del backend estaba conformada por un servidor
								con Express y Apollo Server el cual posteriormente seria migrado
								a Nest, debido a que considere que de esta manera obtendría un
								mayor entendimiento de los dos frameworks y adquiriría la
								experiencia de hacer una migración de framework completa.
							</p>
							<p className="text-md mt-2">
								De esta manera, la primera fase del proyecto consistió en
								configurar Apollo Server con Express, definir los modelos para
								MongoDB y definir los resolvers que se encargarían de convertir
								las operaciones de GraphQL como queries y mutaciones en data,
								para posteriormente migrar a Nest al tener la base del backend
								listo.
							</p>
							<p className="text-md mt-2">
								En el caso del frontend, comencé por definir la estructura de
								rutas que tendría la aplicación, para posteriormente realizar el
								setup de React-Router, Redux y de RTK Query con GraphQL Client.
								Luego de tener el setup listo, comencé a desarrollar las paginas
								y componentes básicos con Styled Componentes, integrando los
								Hooks generados por RTK Query para ir conectando el frontend con
								el backend.
							</p>
						</div>

						<motion.div
							initial={{
								opacity: 0,
								scale: 0.5,
							}}
							whileInView={{
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							className="m-2 mt-2 h-fit w-full rounded-xl shadow-lg shadow-gray-400 lg:order-3 lg:mt-6"
						>
							<Image
								src="/images/cs-4.png"
								alt="Coroshop - Categories"
								width={2000}
								height={1400}
								className="rounded-xl"
							/>
						</motion.div>
					</div>

					<div className="my-8 lg:mt-10">
						<div className="h-fit lg:col-span-2">
							<h4 className="text-xl font-bold text-teal-700">
								Desafíos Durante el Desarrollo
							</h4>
							<p className="text-md mt-4">
								En el backend el mayor desafió consistió en definir como y en
								donde implementar la lógica de autenticación y autorización, ya
								que Nest dispone de diferentes niveles en los que colocar este
								tipo de lógica, como es el caso de los middlewares,
								interceptores o guardias. En este sentido, termine implementando
								un middleware que se encargaría de validar el token de acceso
								del usuario para anexar la información del mismo en el request
								de la petición en caso de ser valido, para posteriormente dejar
								el trabajo de autorización y permisos a los guardias.
							</p>
							<p className="text-md mt-2">
								Por su parte, el mayor reto en el frontend fue configurar RTK
								Query para trabajar con Apollo Client, ya que en la utilidad
								básica no se podia configurar el base query para incluir
								credenciales, por lo que tuve que improvisar y crear un nuevo
								cliente de GraphQL configurado para incluir credenciales y
								posteriormente pasarlo al base query.
							</p>
						</div>
					</div>

					<div className="my-8 grid w-full grid-cols-1 lg:mt-10 lg:grid-cols-2 lg:items-center lg:gap-x-10">
						<motion.div
							initial={{
								opacity: 0,
								scale: 0.5,
							}}
							whileInView={{
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							className="m-2 h-fit w-full rounded-xl shadow-lg shadow-gray-400 lg:order-2"
						>
							<Image
								src="/images/cs-5.png"
								alt="Coroshop - Product"
								width={2000}
								height={1400}
								className="rounded-xl"
							/>
						</motion.div>

						<div className="mt-8 flex h-fit flex-col">
							<div>
								<h4 className="text-xl font-bold text-teal-700">Aprendizaje</h4>
								<p className="text-md mt-4">
									El desarrollo de este proyecto me ayudo a aumentar mi
									entendimiento de TypeScript, sobre todo de los decoradores, ya
									que estos son bastante utilizados en Nest. Ademas, también
									aumente mi comprensión en lo que respecta a la inyección de
									dependencias y a como esta facilita el proceso de testear cada
									modulo.
								</p>

								<p className="text-md mt-2">
									Finalmente, aprendí una nueva y mejor forma de organizar las
									carpetas y archivos de un proyecto, consistente en agrupar los
									archivos por prestación o feature, lo que permite tener las
									dependencias de cada modulo mas cercanas.
								</p>
							</div>
						</div>
					</div>
				</div>
				<div className=" mt-24">
					<h4 className="text-xl font-bold text-teal-700">Otros Proyectos</h4>
					<div className="mt-8 grid w-full grid-cols-1 gap-6 md:gap-8">
						<motion.article
							initial={{
								opacity: 0,
								scale: 0.5,
							}}
							whileInView={{
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							className="grid grid-cols-1 gap-6 rounded-xl border border-solid p-2 shadow-xl md:grid-cols-2"
						>
							<BlurImage src="/images/web-access.png" alt="WebAcess" />

							<div className="flex flex-col items-center justify-between p-4 md:items-start">
								<h3 className="text-md font-medium text-teal-700">WebAccess</h3>
								<p className="mt-2 text-center text-sm md:text-left">
									Herramienta de evaluación automática de accesibilidad web y
									evaluador de contraste.
								</p>
								<div className="mt-4 flex">
									<SiJavascript className='sm:w-8" mr-4 h-6 w-6 text-yellow-400 sm:h-8' />
									<SiReact className='sm:w-8" mr-4 h-6 w-6 text-sky-600 sm:h-8' />
									<SiSass className='sm:w-8" mr-4 h-6 w-6 text-pink-700 sm:h-8' />
									<SiNodedotjs className='sm:w-8" mr-4 h-6 w-6 text-lime-700 sm:h-8' />
									<SiExpress className='sm:w-8" mr-4 h-6 w-6 text-lime-700 sm:h-8' />
									<SiJest className='sm:w-8" mr-4 h-6 w-6 text-red-800 sm:h-8' />
								</div>
								<Link href="/projects/web-access">
									<p className="mt-4 cursor-pointer text-sm font-medium text-pink-700">
										Ver Proyecto
									</p>
								</Link>
							</div>
						</motion.article>

						<motion.article
							initial={{
								opacity: 0,
								scale: 0.5,
							}}
							whileInView={{
								opacity: 1,
								scale: 1,
							}}
							transition={{
								duration: 1.5,
							}}
							className="grid grid-cols-1 gap-4 rounded-xl border border-solid shadow-xl md:grid-cols-2"
						>
							<BlurImage src="/images/sticky-notes.png" alt="Sticky Notes" />

							<div className="flex flex-col items-center justify-between p-4 md:items-start">
								<h3 className="text-md font-medium text-teal-700">
									Sticky Notes
								</h3>
								<p className="mt-2 text-center text-sm md:text-left">
									Aplicación de notas con internacionalización.
								</p>
								<div className="mt-4 flex">
									<SiTypescript className='sm:w-8" mr-4 h-6 w-6 text-sky-600 sm:h-8' />
									<SiReact className='sm:w-8" mr-4 h-6 w-6 text-sky-600 sm:h-8' />
									<SiMaterialui className='sm:w-8" mr-4 h-6 w-6 text-sky-600 sm:h-8' />
									<SiNodedotjs className='sm:w-8" mr-4 h-6 w-6 text-lime-700 sm:h-8' />
									<SiExpress className='sm:w-8" mr-4 h-6 w-6 text-lime-700 sm:h-8' />
									<SiPrisma className='sm:w-8" mr-4 h-6 w-6 text-blue-900 sm:h-8' />
									<SiPostgresql className='sm:w-8" mr-4 h-6 w-6 text-sky-600 sm:h-8' />
									<SiJest className='sm:w-8" mr-4 h-6 w-6 text-red-800 sm:h-8' />
								</div>
								<Link href="/projects/sticky-notes">
									<p className="mt-4 cursor-pointer text-sm font-medium text-pink-700">
										Ver Proyecto
									</p>
								</Link>
							</div>
						</motion.article>
					</div>
				</div>
			</div>
		</div>
	);
};

export default Home;
